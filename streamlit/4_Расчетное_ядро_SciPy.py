import streamlit as st

r"""
# Расчетное ядро SciPy

## scipy.interpolate

Содержит объекты, используемые для интерполяции. Включает в себя сплайновые функции и классы, интерполяционные 
многочлены Лагранжа и Тейлора, а также оболочки для функций FITPACK и DFITPACK.

### class scipy.interpolate.CubicSpline(x, y, axis=0, bc_type='not-a-knot', extrapolate=None)

Интерполяция кубическими сплайнами.

#### Параметры

- x : array_like, shape (n,)

  1-D массив, содержащий значения независимой переменной. Значения должны быть реальными, конечными и находиться в 
  строго возрастающем порядке.
  
- y : array_like
  
  Массив, содержащий значения зависимой переменной. Он может иметь произвольное количество измерений, но длина вдоль 
  оси должна соответствовать длине x. Значения должны быть конечными.
  
- axis : int, optional

  Ось, вдоль которой предполагается, что y изменяется. Это означает, что для x[i] соответствующие значения равны 
  np.take(y, i, axis=axis). Значение по умолчанию равно 0.
  
- bc_type : string or 2-tuple, optional

  Тип граничного условия. Для определения всех коэффициентов многочленов на каждом отрезке требуются два дополнительных 
  уравнения, задаваемых граничными условиями.

  Если bc_type является строкой, то указанное условие будет применено на обоих концах сплайна. Доступными условиями 
  являются:
  
  - ‘not-a-knot’: Первый и второй сегменты в конце кривой представляют собой один и тот же многочлен. 
    Это хорошее значение по умолчанию, когда нет информации о граничных условиях.
    
  - ‘periodic’: предполагается, что интерполированные функции являются периодическими с периодом x[-1] - x[0]. 
    Первое и последнее значение y должно быть одинаковым: y[0] == y[-1]. Это граничное условие приведет к 
    y'[0] == y'[-1] и y"[0] == y"[-1].
    
  - ‘clamped’: Первая производная на концах кривых равна нулю. (то же, что и bc_type=((1, 0.0), (1, 0.0)))
  
  - ‘natural’: Вторая производная на концах кривой равна нулю. (то же, что и bc_type=((2, 0.0), (2, 0.0)))
  
  Если bc_type представляет собой 2-кортеж, то первое и второе значения будут применены в начале и конце кривой 
  соответственно. Значения кортежа могут быть одной из ранее упомянутых строк (кроме ‘periodical’) или кортежем 
  (order, deriv_values), позволяющим указывать произвольные производные на концах кривой:
  
  - order: порядок производной, 1 или 2.
  
  - deriv_value: array_like содержит производные значения, форма должна совпадать с y, исключая размер оси. Например, 
    если y равно 1-D, то deriv_value должно быть скаляром. Если y 3-D с формой (n0, n1, n2) и axis=2, то deriv_value 
    должно быть 2-D и иметь форму (n0, n1).
    
- extrapolate{bool, ‘periodic’, None}, optional

  Если bool, определяет, следует ли экстраполировать на точки, находящиеся за пределами границ, на основе первого и 
  последнего интервалов или возвращать NAN. Если "периодический", то используется периодическая экстраполяция. Если нет,
  для параметра extrapolate устанавливается значение ‘periodic’ для bc_type='periodic' и значение True в 
  противном случае.

##### Возвращаемое значение

- scipy.interpolate.PPoly - объект класса у которого метод `__call__` принимает точки для интерполирования и
    возвращает интерполированные значения.

### Расчетное ядро SciPy

```python
import scipy


y = scipy.interpolate.CubicSpline(xi, yi, bc_type="natural")(x)
```
"""
